// <autogenerated>
//   Do not modify this file manually. Any changes will be lost next time the code is regenerated.
// </autogenerated>

namespace T4WFI.App
{
	using System.Runtime.CompilerServices;

	/// <summary>
	///	All types registered for injection by T4WebFormsInjection.
	/// </summary>
	/// <remarks>
	/// Registered classes can be checked against IOC framework for correct registration.
	/// </remarks>
	public static class T4WebFormsInjection
	{
		/// <summary>
		///	Container interface for use of T4WebFormsInjection to resolve and release objects.
		/// </summary>
		/// <remarks>
		/// Implementation requires a parameterless constructor.
		/// </remarks>
		public interface IScopedContainer
		{
			/// <summary>
			///	Resolves instance of <see cref="T" />.
			/// </summary>
			/// <typeparam name="T">Type to be resolved.</typeparam>
			/// <returns>
			/// Instance of <see cref="T" />.
			/// </returns>
			T Resolve<T>() where T : class;

			/// <summary>
			///	Releases all instances created by this scoped container.
			/// </summary>
			void ReleaseAll();
		}

		/// <summary>
		///	Facilitates the release of objects instantiated by T4WebFormsInjection.
		/// </summary>
		/// <remarks>
		/// Intended to be used internally by T4WebFormsInjection only.
		/// </remarks>
		internal static class DependencyManager
	    {
            private static ConditionalWeakTable<object, DependencyTracker> Tracker;

	        static DependencyManager()
	        {
                DependencyManager.Tracker = new ConditionalWeakTable<object, DependencyTracker>();
            }

	        public static void Track(object target, DependencyTracker dependencyTracker)
	        {
                DependencyManager.Tracker.Add(target, dependencyTracker);
	        }

			internal class DependencyTracker
			{
				private readonly IScopedContainer container;

				internal DependencyTracker()
				{
					this.container = new T4WFI.App.T4WebFormsInjectionScopedContainer();
				}

				internal T Resolve<T>()
					where T : class
				{
					return this.container.Resolve<T>();
				}

				internal void ReleaseContainer()
				{
					this.container.ReleaseAll();
				}

				~DependencyTracker()
				{
					this.ReleaseContainer();
				}
			}
		}
	}
}

namespace T4WFI.App.Handlers
{
    using System;

    public partial class Handler1
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Handler1"/> class.
        /// </summary>
        /// <remarks>
        /// Generated by T4WebFormsInjected.
        /// </remarks>
        [Obsolete("Use T4WFI.App.Handlers.Handler1(dummyInterface) instead.")]
        public Handler1()
            : this(new T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker())
        {
        }

		private Handler1(T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker tracker)
			: this(dummyInterface: tracker.Resolve<T4WFI.App.Code.IDummyInterface>())
		{
			T4WFI.App.T4WebFormsInjection.DependencyManager.Track(this, tracker);
		}
    }

    public partial class Handler2
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Handler2"/> class.
        /// </summary>
        /// <remarks>
        /// Generated by T4WebFormsInjected.
        /// </remarks>
        [Obsolete("Use T4WFI.App.Handlers.Handler2(dummyInterface, dummyInterface2) instead.")]
        public Handler2()
            : this(new T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker())
        {
        }

		private Handler2(T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker tracker)
			: this(dummyInterface: tracker.Resolve<T4WFI.App.Code.IDummyInterface>(),
                   dummyInterface2: tracker.Resolve<T4WFI.App.Code.IDummyInterface2>())
		{
			T4WFI.App.T4WebFormsInjection.DependencyManager.Track(this, tracker);
		}
    }
}

namespace T4WFI.App.MasterPages
{
    using System;

    public partial class Site1
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Site1"/> class.
        /// </summary>
        /// <remarks>
        /// Generated by T4WebFormsInjected.
        /// </remarks>
        [Obsolete("Use T4WFI.App.MasterPages.Site1(dummyInterface) instead.")]
        public Site1()
            : this(new T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker())
        {
        }

		private Site1(T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker tracker)
			: this(dummyInterface: tracker.Resolve<T4WFI.App.Code.IDummyInterface>())
		{
			T4WFI.App.T4WebFormsInjection.DependencyManager.Track(this, tracker);
		}
    }
}

namespace T4WFI.App.Modules
{
    using System;

    public partial class MyModule1
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MyModule1"/> class.
        /// </summary>
        /// <remarks>
        /// Generated by T4WebFormsInjected.
        /// </remarks>
        [Obsolete("Use T4WFI.App.Modules.MyModule1(dummyInterface) instead.")]
        public MyModule1()
            : this(new T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker())
        {
        }

		private MyModule1(T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker tracker)
			: this(dummyInterface: tracker.Resolve<T4WFI.App.Code.IDummyInterface>())
		{
			T4WFI.App.T4WebFormsInjection.DependencyManager.Track(this, tracker);
		}
    }

    public partial class MyModule2
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MyModule2"/> class.
        /// </summary>
        /// <remarks>
        /// Generated by T4WebFormsInjected.
        /// </remarks>
        [Obsolete("Use T4WFI.App.Modules.MyModule2(dummyInterface, dummyInterface2) instead.")]
        public MyModule2()
            : this(new T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker())
        {
        }

		private MyModule2(T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker tracker)
			: this(dummyInterface: tracker.Resolve<T4WFI.App.Code.IDummyInterface>(),
                   dummyInterface2: tracker.Resolve<T4WFI.App.Code.IDummyInterface2>())
		{
			T4WFI.App.T4WebFormsInjection.DependencyManager.Track(this, tracker);
		}
    }
}

namespace T4WFI.App.Pages
{
    using System;

    public partial class WebForm1
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebForm1"/> class.
        /// </summary>
        /// <remarks>
        /// Generated by T4WebFormsInjected.
        /// </remarks>
        [Obsolete("Use T4WFI.App.Pages.WebForm1(dummyInterface, dummyInterfaceFromPartial) instead.")]
        public WebForm1()
            : this(new T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker())
        {
        }

		private WebForm1(T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker tracker)
			: this(dummyInterface: tracker.Resolve<T4WFI.App.Code.IDummyInterface>(),
                   dummyInterfaceFromPartial: tracker.Resolve<T4WFI.App.Code.IDummyInterface2>())
		{
			T4WFI.App.T4WebFormsInjection.DependencyManager.Track(this, tracker);
		}
    }

    public partial class WebForm2
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebForm2"/> class.
        /// </summary>
        /// <remarks>
        /// Generated by T4WebFormsInjected.
        /// </remarks>
        [Obsolete("Use T4WFI.App.Pages.WebForm2(dummyInterface, dummyInterface2) instead.")]
        public WebForm2()
            : this(new T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker())
        {
        }

		private WebForm2(T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker tracker)
			: this(dummyInterface: tracker.Resolve<T4WFI.App.Code.IDummyInterface>(),
                   dummyInterface2: tracker.Resolve<T4WFI.App.Code.IDummyInterface2>())
		{
			T4WFI.App.T4WebFormsInjection.DependencyManager.Track(this, tracker);
		}
    }
}

namespace T4WFI.App.UserControls
{
    using System;

    public partial class UC1
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UC1"/> class.
        /// </summary>
        /// <remarks>
        /// Generated by T4WebFormsInjected.
        /// </remarks>
        [Obsolete("Use T4WFI.App.UserControls.UC1(dummyInterface) instead.")]
        public UC1()
            : this(new T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker())
        {
        }

		private UC1(T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker tracker)
			: this(dummyInterface: tracker.Resolve<T4WFI.App.Code.IDummyInterface>())
		{
			T4WFI.App.T4WebFormsInjection.DependencyManager.Track(this, tracker);
		}
    }

    public partial class UC2
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UC2"/> class.
        /// </summary>
        /// <remarks>
        /// Generated by T4WebFormsInjected.
        /// </remarks>
        [Obsolete("Use T4WFI.App.UserControls.UC2(dummyInterface, dummyInterface2) instead.")]
        public UC2()
            : this(new T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker())
        {
        }

		private UC2(T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker tracker)
			: this(dummyInterface: tracker.Resolve<T4WFI.App.Code.IDummyInterface>(),
                   dummyInterface2: tracker.Resolve<T4WFI.App.Code.IDummyInterface2>())
		{
			T4WFI.App.T4WebFormsInjection.DependencyManager.Track(this, tracker);
		}
    }
}

namespace T4WFI.App.WebServices
{
    using System;

    public partial class WebService1
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebService1"/> class.
        /// </summary>
        /// <remarks>
        /// Generated by T4WebFormsInjected.
        /// </remarks>
        [Obsolete("Use T4WFI.App.WebServices.WebService1(dummyInterface, dummyInterface2) instead.")]
        public WebService1()
            : this(new T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker())
        {
        }

		private WebService1(T4WFI.App.T4WebFormsInjection.DependencyManager.DependencyTracker tracker)
			: this(dummyInterface: tracker.Resolve<T4WFI.App.Code.IDummyInterface>(),
                   dummyInterface2: tracker.Resolve<T4WFI.App.Code.IDummyInterface2>())
		{
			T4WFI.App.T4WebFormsInjection.DependencyManager.Track(this, tracker);
		}
    }
}

